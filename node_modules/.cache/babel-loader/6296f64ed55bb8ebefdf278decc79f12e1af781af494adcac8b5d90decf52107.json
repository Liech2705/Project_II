{"ast":null,"code":"import appSidebar from './components/appSidebar.vue';\nexport default {\n  name: 'App',\n  data() {\n    return {\n      isExpand: false\n    };\n  },\n  methods: {\n    toggleSidebar() {\n      this.isExpand = !this.isExpand;\n    }\n  },\n  mounted() {\n    // Initialize Bootstrap's collapse plugin\n    const sidebar = document.querySelector('#sidebar');\n    const bsCollapse = new bootstrap.Collapse(sidebar, {\n      toggle: false\n    });\n  },\n  watch: {\n    isExpand(newVal) {\n      const sidebar = document.querySelector('#sidebar');\n      if (newVal) {\n        sidebar.classList.add('expanded');\n      } else {\n        sidebar.classList.remove('expanded');\n      }\n    }\n  },\n  computed: {\n    sidebarClass() {\n      return this.isExpand ? 'sidebar expanded' : 'sidebar';\n    }\n  },\n  created() {\n    // Add event listener for window resize\n    window.addEventListener('resize', this.handleResize);\n  },\n  beforeDestroy() {\n    // Remove event listener for window resize\n    window.removeEventListener('resize', this.handleResize);\n  },\n  components: {\n    appSidebar\n  }\n};","map":{"version":3,"names":["appSidebar","name","data","isExpand","methods","toggleSidebar","mounted","sidebar","document","querySelector","bsCollapse","bootstrap","Collapse","toggle","watch","newVal","classList","add","remove","computed","sidebarClass","created","window","addEventListener","handleResize","beforeDestroy","removeEventListener","components"],"sources":["D:\\University\\Semester VI\\Project_2\\New_Project\\website_baodientu\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <appSidebar/>\n  </div>\n</template>\n\n<script>\nimport appSidebar from './components/appSidebar.vue';\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      isExpand: false\n    }\n  },\n  methods: {\n    toggleSidebar() {\n      this.isExpand = !this.isExpand;\n    }\n  },\n  mounted() {\n    // Initialize Bootstrap's collapse plugin\n    const sidebar = document.querySelector('#sidebar');\n    const bsCollapse = new bootstrap.Collapse(sidebar, {\n      toggle: false\n    });\n  },\n  watch: {\n    isExpand(newVal) {\n      const sidebar = document.querySelector('#sidebar');\n      if (newVal) {\n        sidebar.classList.add('expanded');\n      } else {\n        sidebar.classList.remove('expanded');\n      }\n    }\n  },\n  computed: {\n    sidebarClass() {\n      return this.isExpand ? 'sidebar expanded' : 'sidebar';\n    }\n  },\n  created() {\n    // Add event listener for window resize\n    window.addEventListener('resize', this.handleResize);\n  },\n  beforeDestroy() {\n    // Remove event listener for window resize\n    window.removeEventListener('resize', this.handleResize);\n  },\n  components: {\n    appSidebar\n  }\n\n}\n</script>\n\n<style>\n\n</style>\n"],"mappings":"AAOA,OAAOA,UAAS,MAAO,6BAA6B;AAEpD,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACd,IAAI,CAACF,QAAO,GAAI,CAAC,IAAI,CAACA,QAAQ;IAChC;EACF,CAAC;EACDG,OAAOA,CAAA,EAAG;IACR;IACA,MAAMC,OAAM,GAAIC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;IAClD,MAAMC,UAAS,GAAI,IAAIC,SAAS,CAACC,QAAQ,CAACL,OAAO,EAAE;MACjDM,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC;EACDC,KAAK,EAAE;IACLX,QAAQA,CAACY,MAAM,EAAE;MACf,MAAMR,OAAM,GAAIC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;MAClD,IAAIM,MAAM,EAAE;QACVR,OAAO,CAACS,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;MACnC,OAAO;QACLV,OAAO,CAACS,SAAS,CAACE,MAAM,CAAC,UAAU,CAAC;MACtC;IACF;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACjB,QAAO,GAAI,kBAAiB,GAAI,SAAS;IACvD;EACF,CAAC;EACDkB,OAAOA,CAAA,EAAG;IACR;IACAC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACC,YAAY,CAAC;EACtD,CAAC;EACDC,aAAaA,CAAA,EAAG;IACd;IACAH,MAAM,CAACI,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACF,YAAY,CAAC;EACzD,CAAC;EACDG,UAAU,EAAE;IACV3B;EACF;AAEF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}